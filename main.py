import asyncio

from settings import TOKEN
from keyboards import *
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, FSInputFile, CallbackQuery, InputMediaPhoto

bot = Bot(TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start """

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä –∏ —Ç–µ–∫—Å—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer_photo(
        photo=FSInputFile("images/banner_1.jpg"),
        caption=(
            "üî• –ü—Ä–∏–≤–µ—Ç, –Ω–∞ —Å–≤—è–∑–∏ –±–æ—Ç <b>CookChef</b>!\n\n"
            "–ß—Ç–æ–±—ã –≤–∫—É—Å–Ω–æ –ø–æ–∫—É—à–∞—Ç—å, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ–¥—É –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ - –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Å–∞–º–æ–º—É!\n\n"
            "–ù–∏–∂–µ —Ç—ã —É–≤–∏–¥–∏—à—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫. \n"
            "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å: –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç, –ø–æ–¥–æ–±—Ä–∞—Ç—å –µ–¥—É –ø–æ –∏–º–µ—é—â–∏–º—Å—è –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç, <b>—Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º!</b>"
        ),
        reply_markup=inline_kb_full,
        parse_mode="HTML"
    )


@dp.callback_query(MyCallback.filter())
async def buttons_callback(call: CallbackQuery, callback_data: MyCallback):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ """

    # –ö–Ω–æ–ø–∫–∞ "–•–æ—á—É —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç"
    if callback_data.test == "1":
        await call.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile("images/image_1.jpg"))
        )

        await call.message.edit_caption(
            caption="123",
            parse_mode="HTML",
            reply_markup=inline_kb_random_recipe
        )
    
    if callback_data.test == "0":
        await call.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile("images/banner_1.jpg"))
        )

        await call.message.edit_caption(
            caption=(
                "üî• –ü—Ä–∏–≤–µ—Ç, –Ω–∞ —Å–≤—è–∑–∏ –±–æ—Ç <b>CookChef</b>!\n\n"
                "–ß—Ç–æ–±—ã –≤–∫—É—Å–Ω–æ –ø–æ–∫—É—à–∞—Ç—å, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ–¥—É –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ - –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Å–∞–º–æ–º—É!\n\n"
                "–ù–∏–∂–µ —Ç—ã —É–≤–∏–¥–∏—à—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫. \n"
                "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å: –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç, –ø–æ–¥–æ–±—Ä–∞—Ç—å –µ–¥—É –ø–æ –∏–º–µ—é—â–∏–º—Å—è –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç, <b>—Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º!</b>"
            ),
            parse_mode="HTML",
            reply_markup=inline_kb_full
        )


@dp.message()
async def on_message(message: Message):
    pass


async def main():
    """ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã """

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
